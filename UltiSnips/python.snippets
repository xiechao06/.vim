snippet #!
#!/usr/bin/env python
# -*- coding: UTF-8 -*-
endsnippet 

snippet code
# -*- coding: UTF-8 -*-
endsnippet

snippet sa:id
id = db.Column(db.Integer, primary_key=True)
endsnippet

snippet sa:fk
$1_id = db.Column(db.Integer, db.ForeignKey('TB_${1/.*/\U$0\E/g}.id'))
$1 = db.relationship("${1/.*/\u$0/g}", backref='${2:foo_list}')
endsnippet

snippet sa:model
class ${1:Foo}(db.Model):
	__tablename__ = '${1/.+/TB_\U$0\E/g}'

    id = db.Column(db.Integer, primary_key=True)

	def __unicode__(self):
		return $2

    def to_dict(self):
        return dict((c.name, getattr(self, c.name)) for c
                    in self.__mapper__.columns)
endsnippet

snippet sa:created
created = db.Column(db.DateTime, default=datetime.now)
endsnippet

snippet i "import" b!
import $1
endsnippet


snippet flask:app
import os
from flask import Flask

app = Flask(__name__, instance_relative_config=True)
app.config.from_object('${1:module}.default_settings')
app.config.from_pyfile(os.path.join(os.getcwd(), 'local_config.py'),
                       silent=True)
endsnippet

snippet script
#!/usr/bin/env python
# encoding: utf-8
"""
Usage:
	${1:script_name}.py [OPTIONS]
OPTIONS:
	-h
		show this help
	-${2:x}
"""
import sys
import getopt

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h$3")
    except getopt.GetoptError as err:
        print str(err)
        print __doc__
        sys.exit(2)

	for o, a in opts:
        if o == '-h':
            print __doc__
            sys.exit(1)
		${4:elif}
endsnippet

snippet flask:bp
$1_bp = Blueprint('$1', __name__, static_folder='static',
                        template_folder='templates')
endsnippet

snippet sa:table
$1_table = db.Table('TB_${1/.*/\U$0\E/g}', db.Model.metadata,
					db.Column('$2', db.Integer,
							  db.ForeignKey('TB_${2/(.*)_id/\U$1\E/}.id')),
					db.Column('$3', db.Integer,
							  db.ForeignKey('TB_${3/(.*)_id/\U$1\E/}.id')))
endsnippet
